using System.Linq;
using Content.Client.Administration.Systems;
using Content.Client.Corvax.Sponsors;
using Content.Shared.Administration;
using Content.Shared.Corvax.Sponsors;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.Player;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using static Content.Client.Administration.UI.Tabs.SponsorTab.SponsorTabHeader;
using static Robust.Client.UserInterface.Controls.BaseButton;

namespace Content.Client.Administration.UI.Tabs.SponsorTab
{
    [GenerateTypedNameReferences]
    public sealed partial class SponsorTab : Control
    {
        [Dependency] private readonly SponsorsManager _sponsorsManager = default!;

        private const string ArrowUp = "↑";
        private const string ArrowDown = "↓";
        private readonly Color _altColor = Color.FromHex("#292B38");
        private readonly Color _defaultColor = Color.FromHex("#2F2F3B");

        private readonly List<SponsorTabEntry> _sponsors = new();

        public SponsorTab()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);

            if (_sponsorsManager != null && _sponsorsManager.TryGetSponsorList(out var sponsorArray))
            {
                if (sponsorArray != null)
                {
                    RefreshSponsorList(sponsorArray.ToList());
                }
            }
        }

        private void RefreshSponsorList(IReadOnlyList<SponsorInfo> sponsors)
        {
            foreach (var control in _sponsors)
            {
                SponsorList.RemoveChild(control);
            }

            _sponsors.Clear();

            SponsorCount.Text = $"Спонсоров: {sponsors.Count}";

            var useAltColor = false;
            var sortedSponsors = new List<SponsorInfo>(sponsors);

            foreach (var sponsor in sortedSponsors)
            {
                var entry = new SponsorTabEntry(sponsor, new StyleBoxFlat(useAltColor ? _altColor : _defaultColor));
                SponsorList.AddChild(entry);
                _sponsors.Add(entry);
                useAltColor ^= true;
            }
        }
    }
}
